Tak mniej więcej chciał bym to poskładać. Niektóre pola jeszcze do wypełnienia.
!! Nie jestem turbo oganięty jeżeli chodzi o dziedziczenie dostępu do metod i pól, częściej używam friendów (wiem że to źle), więc
!! jeżeli będziesz widział, że coś tu nie styka to poprawiaj i commituj, żebym widziałco się zmieniło

Propozycje:
- Backpack->item_array itemy które będziemy próbowali zmieścić do plecaka wczytywać z pliku txt
- Potrzebny nam będzie do KNP->KNP_approx najlepiej (prosty i stabilny) mergesort. Trzeba będzie jakoś go doczepić (osobna klasa "funkcje"?)
Propozycja struktury projektu:


class KNP {
: public Backpack
  public:
    //metody rozwiazywania problemu (wstawiłem propozycje)
    void KNP_bruteforce();
    void KNP_dynamic();
    void KNP_approx();
  private:
    Backpack Backpack;
};

class Backpack
: public Item
{
  public:
    Backpack(int capacity);   //konstruktor inicjuje pojemność i "wypełni" item_array
  private:
    int capacity;       //pojemność plecaka
    Item* item_array;   <- niech to będzie tablica zapakowanych przedmiotów, albo zrobimy jakiś inny kontener
                        //tablica przedmiotów. Myślałem też nad listą, ale wydaje mi się że na tablicy będzie nam łatwiej pracować.
};                      //Poza tym i tak musielibyśmy zająć listą tyle samo (a nawet więcej) pamięci co tablicą.


class Item{
  public:
    Item(int value, int size);         //konstruktor inicjije przedmiot o zadanych value i size
  private:
    int value;      //wartość przedmiotu
    int size;       //rozmiar przedmiotu
    string name;    //nazwa przedmiotu
};

class Shop{
  public:
    
  private:
    string name;
    Item* Item_array;
};
